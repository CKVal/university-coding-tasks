sergejs.rikacovs@lumii.lv

=== F19 =======================================

Izveidot programmu valodā C++, kas apstrādā teksta failu secīgā režīmā.
Dati no faila jānolasa pa vienai rindiņai. Nedrīkst dublēt visa faila saturu operatīvajā atmiņā.
Sīkākas prasības sk. Laboratorijas darbu noteikumos.

F19. Izvadīt dotajā teksta failā f sastapto latīņu alfabēta burtu un ciparu lietojuma biežuma tabulu (šķirojot lielos un mazos burtus) failā f1. Tabulai jābūt sakārtotai pēc burtu lietojuma biežuma.


=== G23 =======================================

Izveidot divas programmas valodā C++, kas strādā ar vērtību virkni divos dažādos veidos:
  1) to realizējot kā vienvirziena saistīto sarakstu, izmantojot dinamiskas datu struktūras,
  2) izmantojot STL::list konteineru.
Abās realizācijās ir jāizveido prasītā specifiskā vērtību virknes apstrādes funkcija un jānodemonstrē tā darbībā,
cita starpā parādot gan sākotnējās, gan rezultējošās vērtības.
Abās programmās:  
  a) jābūt iespējai ievadīt saraksta elementus (izveidot patvaļīgu sarakstu),
  b) jāpielieto uzrakstītā funkcija sarakstam,  
  c) jāizdrukā saraksts pēc funkcijas darbības.  
  d) beigās jāiznīcina saraksts - korekti jāatbrīvo izdalītā atmiņa(lietojot delete vai clear).
Sīkākas prasības sk. Laboratorijas darbu noteikumos.

G23. Uzrakstīt funkciju, kas izmet no saraksta tos elementus, kuru vērtība lielāka par tam sekojošā elementa vērtību.


=== H3 =======================================

Izveidot programmu valodā C++.  Ja programma darbojas ar failu, nedrīkst dublēt visa faila saturu operatīvajā atmiņā.
Ar faila komponenti tiek saprasts fiksēta garuma ieraksts. Sīkākās prasības sk. Laboratorijas darbu noteikumos.

H3. "Dots teksta fails. Saskaitīt tekstā vārdus (garumā vismaz 2) pēc to pirmajiem diviem burtiem, nešķirojot reģistru (""ab"", ""ac"", ""ad"" utt.). Programmai statistika pa vārdu garumiem jāsaliek tabulā, kas realizēta kā vārdnīca (STL map). Programmas rezultātā iegūt failu, kas katrai tekstā sastopamajai 2 burtu virknei (ar ko sākas vārds) izdrukāts pārstāvēto vārdu skaits (piemēram, ab 7, ac 3, ad 5 utt.). Par vārdu tiek uzskatīta latīņu alfabēta burtu virkne."


=== GG =========================================

GG – STL list un saistītais saraksts ar izņēmumsituāciju apstrādi un vienībtestēšanu**.

* atrisināt uzdevumu G divos veidos:
  a) izmantojot dinamiskas datu struktūras (saistīto sarakstu vtml.),
  b) izmantojot STL::list konteineru.

** tas pats uzdevums, kas G, bet tā risinājums (a) jāpapildina ar divām lietām:
  1) vismaz viena no datu pārbaudēm jārealizē, izmantojot izņēmumsituāciju apstrādes (exception handling) mehānismu,
  2) vismaz viena funkcija (vēlams, galvenā) ir jānotestē, izmantojot vienībtestēšanu, kur attiecīgā funkcija būtu jāpārbauda uz vismaz trīs dažādiem nosacījumiem;
     šim nolūkam, kā minimums, ir nepieciešams:
     (1) šo funkciju iznest ārā citā failā (nekā funkcija main),
     (2) izveidot otru projektu speciāli šīs funkcijās testēšanai (tātad, kopā būs divi projekti, parastais, kas izmantos funkciju, otrais, kas testēs).

Papildus norāde: šādam vienībtestēšanas projektam daļēji atbilst iepriekšējā semestra pēdējais laboratorijas darbs (ar klasēm) ar cieti iekodētu main funkciju.

